{"version":3,"sources":["assets/images/img1.jpg","assets/images/img2.jpg","assets/images/img3.jpg","assets/images/img4.jpg","scripts/reducers/data.js","scripts/reducers/index.js","scripts/store.js","scripts/components/swipe/index.js","scripts/views/guide/index.js","utils/axios.js","utils/index.js","scripts/actions/index.js","scripts/views/home/index.js","scripts/views/user/index.js","scripts/views/manager/index.js","scripts/views/infstat/index.js","scripts/views/class/index.js","scripts/views/about/index.js","scripts/views/changepwd/index.js","scripts/views/interview/index.js","scripts/views/main/index.js","scripts/views/search/index.js","scripts/components/head/index.js","scripts/views/mobile/index.js","scripts/views/login/index.js","scripts/views/register/index.js","scripts/views/index.js","scripts/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","defaultState","immutable","fromJS","oClass","studentList","userList","userCount","userRole","logList","reducers","combineReducers","data","state","action","type","set","payload","paylaod","store","createStore","applyMiddleware","thunk","promise","MySwipe","flag","this","props","id","children","options","console","log","className","length","Swiper","Component","item","SwipeItem","fail","msg","hide","success","axios","defaults","baseURL","headers","common","post","interceptors","request","use","config","time","loading","error","offline","Promise","reject","response","code","changeClass","updateStudents","updateUserList","getLogList","a","async","url","get","res","getStudentsInfAsync","params","class","getUserListAsync","role","Option","Select","Home","connect","getIn","handleChange","value","setState","sClass","handleChooseClass","sessionStorage","username","then","dispatch","getAllUserCount","setTimeout","echarts","init","document","getElementById","setOption","title","text","tooltip","xAxis","yAxis","series","name","subtext","left","trigger","formatter","legend","orient","radius","center","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","defaultValue","size","style","width","onChange","onClick","React","Search","Input","User","handleDel","i","_id","handleCancel","handleToUpdateStu","newpwd","password","handleChangeSelector","handleSearch","arr","push","location","history","match","forEach","columns","dataIndex","key","render","record","placeholder","enterButton","onSearch","dataSource","ref","el","Manager","InfStat","selectedRowKeys","onSelectChange","handleDelOne","rowSelection","hideDefaultSelections","Column","Table","ColumnGroup","Class","subject","hideA","hideU","handleAddStudentsInf","handleToAddStu","english","math","chinese","handleUpdateStudentsInf","sNum","score","handleDelete","search","parse","query","querystring","tClass","list","sorter","b","About","Changepwd","handleChangePwd","oldpwd","message","warning","clear","color","Interview","Header","Layout","Content","Sider","Footer","SubMenu","Menu","Main","collapsed","showToAdmin","showToTeacher","showToStudent","onCollapse","getElementsByClassName","innerHTML","handleLogout","token","menu","Item","target","rel","minHeight","collapsible","theme","defaultSelectedKeys","mode","to","background","padding","overlay","margin","path","component","myImg","src","alt","Head","visible","selected","handleToGoBack","goBack","onSelect","opt","handleVisibleChange","show","icon","onLeftClick","rightContent","mask","overlayClassName","overlayStyle","data-seed","whiteSpace","align","overflow","adjustY","adjustX","offset","onVisibleChange","height","marginRight","display","alignItems","Mobile","mReg","cReg","timer","Login","handleGotoLogin","mobile","handleCheckUsername","handleCheckPassword","handleCheckMobile","e","toggle","codeFlag","test","loginFlag","handleCheckCode","start","count","txt","clearInterval","computedTime","setInterval","handleSendCode","handleSubmit","Date","toLocaleDateString","handleGotoRegister","prefix","disabled","Register","handle","handleGoToLogin","handleGoToRegister","MainBox","MainLayout","basename","MainRouter","App","Boolean","window","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ebdfc094.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img1.fe259af7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img2.8170ea46.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img3.0b925144.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img4.fa80aec6.jpg\";","\r\nimport immutable from \"immutable\";\r\n\r\nconst defaultState=immutable.fromJS({\r\n    oClass:1,\r\n    studentList:[],\r\n    userList:[],\r\n    userCount:[],\r\n    userRole:null,\r\n    logList:[]\r\n})\r\n\r\nexport const data=(state=defaultState,action)=>{\r\n    switch (action.type) {\r\n        case \"changeClass\":\r\n            return state.set(\"oClass\",action.payload);\r\n            break;\r\n        case \"changeLogList\":\r\n            return state.set(\"logList\",action.paylaod);\r\n            break;\r\n        case \"getLogList\":\r\n            return state.set(\"logList\",action.payload);\r\n            break;\r\n        case \"updateStudents\":\r\n            return state.set(\"studentList\",action.payload)\r\n            break;\r\n        case \"updateUserList\":\r\n            return state.set(\"userList\",action.payload);\r\n            break;\r\n        case \"getStudentsInfAsync\":\r\n            return state.set(\"studentList\",action.payload);\r\n            break;\r\n        case \"getUserListAsync\":\r\n            return state.set(\"userList\",action.payload);\r\n            break;\r\n        case \"getAllUserCount\":\r\n            return state.set(\"userCount\",action.payload);\r\n            break;\r\n        case \"changeUserRole\":\r\n            return state.set(\"userRole\",action.payload);\r\n            break;\r\n        default:\r\n            return state;\r\n            break;\r\n    }\r\n}","import { combineReducers } from \"redux-immutable\";\r\nimport { data } from \"./data\";\r\nexport const reducers =combineReducers({\r\n    data:data\r\n})","import { createStore ,applyMiddleware } from \"redux\";\r\nimport {reducers} from \"./reducers\"\r\n\r\nimport thunk from \"redux-thunk\";\r\nimport promise from \"redux-promise\";\r\n\r\nconst store=createStore(reducers,applyMiddleware(thunk,promise));\r\n\r\nexport default store;","import \"./index.scss\"\r\n\r\nimport React, { Component } from \"react\"\r\nimport Swiper from \"swiper\"\r\n\r\n\r\n\r\n// 封装 Swiper  组件  \r\n// 1. 引入\r\n// 2. html 结构\r\n// 3. 实例化   new Swiper \r\n\r\nexport class MySwipe extends Component {\r\n    state = {\r\n        flag: true\r\n    }\r\n    render() {\r\n        const {\r\n            id,\r\n            options,\r\n            children\r\n        } = this.props;\r\n        console.log(children)\r\n        return (\r\n            <div\r\n                className=\"swiper-container\"\r\n                id={id}\r\n            >\r\n                <div className=\"swiper-wrapper\">\r\n                    {\r\n                        children\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        const {\r\n            id,\r\n            options,\r\n            children\r\n        } = this.props;\r\n        if(children.length>0){\r\n            let thisSwiper = new Swiper(\"#\"+id,options);\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n        // const {\r\n        //     id,\r\n        //     options,\r\n        //     children\r\n        // }=this.props;\r\n        // if(children.length>0&&this.state.flag){\r\n        //     let thisSwiper = new Swiper(\"#\"+id,options);\r\n        //     this.setState({flag:false}) // 避免多次实例化\r\n        // }\r\n    }\r\n}\r\n\r\n// 静态属性\r\n// 无状态组件\r\nMySwipe.item = (props) => {\r\n    return (\r\n        <div className=\"swiper-slide\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from \"react\"\r\nimport { MySwipe } from \"~/components/swipe\";\r\nimport { NavLink } from \"react-router-dom\";\r\n// import {Button} from \"antd-mobile\"\r\n\r\nconst SwipeItem = MySwipe.item;\r\nexport class Guide extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            imgs: [\r\n                require(\"@/assets/images/img1.jpg\"),\r\n                require(\"@/assets/images/img2.jpg\"),\r\n                require(\"@/assets/images/img3.jpg\"),\r\n                require(\"@/assets/images/img4.jpg\")\r\n            ]\r\n        }\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n    handleChangeRoute() {\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* <h4>guide -- guide -- guide</h4> */}\r\n                <MySwipe\r\n                    id=\"guide\"\r\n                    options={{\r\n                        loop: false,\r\n                        autoplay: { delay: 1500, speed: 1200 },\r\n                    }\r\n                    }\r\n                >\r\n                    {\r\n                        this.state.imgs.map((item, i) => {\r\n                            return (\r\n                                <SwipeItem key={i}>\r\n                                    <NavLink to=\"/main/home\">\r\n                                        <img src={item} alt=\"\" />\r\n                                    </NavLink>\r\n                                </SwipeItem>\r\n                            )\r\n                        })\r\n                    }\r\n\r\n                </MySwipe>\r\n            </div>\r\n        )\r\n    }\r\n}","\r\n\r\nimport axios from \"axios\";\r\nimport {Toast} from \"antd-mobile\"\r\n// const baseURL = 'http://192.168.50.123:3001/'\r\n// const baseURL = 'http://localhost:3001/'\r\nconst baseURL = 'http://47.104.166.148:3002/'\r\n\r\nlet token = \"\";\r\naxios.defaults.baseURL = baseURL;\r\naxios.defaults.headers.common['token'] = token;   // req.headers.token \r\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\r\n\r\n\r\nexport function loadingToast(msg,time) {\r\n    msg = msg || \"请求中...\";\r\n    time = time || 1;\r\n    Toast.hide();\r\n    Toast.loading(msg, time , () => {\r\n        console.log('Load complete !!!');\r\n    });\r\n}\r\n\r\nexport function fail(msg) {\r\n    Toast.hide();\r\n    Toast.fail(msg, 1);\r\n}\r\n\r\nexport function offline(msg) {\r\n    Toast.hide();\r\n    Toast.offline(msg, 1);\r\n}\r\n\r\nexport function success(msg) {\r\n    Toast.hide()\r\n    Toast.success(msg, 1);\r\n}\r\n// axios  拦截器  Interceptors\r\n// request 请求发送之前的拦截器\r\naxios.interceptors.request.use(function (config) {\r\n    // 配置动画\r\n    loadingToast();\r\n    return config;\r\n  }, function (error) {\r\n    // 请求失败错误提示 \r\n    offline(\"请求失败-网络异常\");\r\n    return Promise.reject(error);\r\n});\r\n\r\n\r\n\r\n// response 响应 完成 的拦截器\r\naxios.interceptors.response.use(function (response) {\r\n\r\n    console.log(response)\r\n    if(response.data.code==\"3000\"){\r\n       // 跳转 登录 \r\n    }\r\n    // type  不存在    success\r\n    // type = 0  fail\r\n    // type = 1  success \r\n    if(!!response.data.type){\r\n        success(response.data.msg);\r\n    }else{\r\n        if(response.data.type==0){\r\n            fail(response.data.msg)\r\n        }else{\r\n            success(response.data.msg)\r\n        }\r\n    }\r\n    \r\n\r\n    // 成功的响应\r\n    return response;\r\n  }, function (error) {\r\n    // 失败的响应 \r\n    fail(\"响应失败-服务器异常\")\r\n    return Promise.reject(error);\r\n});\r\n\r\nexport {axios,baseURL}","import {createHashHistory} from \"history\"\r\n\r\nexport {msg} from \"./msg\"\r\n\r\n\r\nexport {config} from \"./config\"\r\nexport {axios, baseURL} from \"./axios\"\r\nexport const commonCss={\r\n    all:{\r\n        margin: 0,\r\n        padding :0\r\n    },\r\n    one:{\r\n        width:100,\r\n        height:100,\r\n        borderRadius:\"50%\",\r\n        textAlign:\"center\",\r\n        lineHeight:\"100px\",\r\n        boxShadow:\"0 0 0 5px orange\",\r\n        boxSizing:'border-box'\r\n    }\r\n\r\n} \r\n\r\nexport const commonJS={\r\n    move(){\r\n        console.log(\"这是鼠标移动事件\")\r\n    },\r\n    touch(){\r\n        console.log(\"这是触摸屏幕事件\")\r\n    }\r\n}\r\n// export const history=new createHashHistory()","\r\nimport {axios} from \"&\"\r\n\r\nexport const countAdd={\r\n    type:\"countAdd\"\r\n}\r\nexport const countDesc={\r\n    type:\"countDesc\"\r\n}\r\n\r\nexport const changeMsg=()=>{\r\n    return{\r\n        type:\"changeMsg\",\r\n        payload\r\n    }\r\n}\r\nexport const changeClass=(payload)=>{\r\n    return {\r\n        type:'changeClass',\r\n        payload\r\n    }\r\n}\r\nexport const updateStudents=(payload)=>{\r\n    return {\r\n        type:\"updateStudents\",\r\n        payload\r\n    }\r\n}\r\nexport const updateUserList=(payload)=>{\r\n    return {\r\n        type:\"updateUserList\",\r\n        payload\r\n    }\r\n}\r\nexport const changeUserRole=(payload)=>{\r\n    return {\r\n        type:\"changeUserRole\",\r\n        payload\r\n    }\r\n}\r\nexport const changeLogList=(payload)=>{\r\n    return{\r\n        type:\"changeLogList\",\r\n        payload\r\n    }\r\n}\r\n\r\nexport async function getLogList({url}){\r\n    const res=await axios.get(url);\r\n    return {\r\n        type:\"getLogList\",\r\n        payload:res.data.data\r\n    }\r\n}\r\n\r\nexport async function getComments({url}){\r\n    const res= await axios.get(url);\r\n    return {\r\n        type:\"getComments\",\r\n        payload:res.data.data\r\n    }\r\n}\r\n\r\nexport async function getLoginAsync({url,params}){\r\n    const res= await axios.post(url,{\r\n        username:params.username,\r\n        password:params.password,\r\n        role:params.role\r\n    });\r\n    return {\r\n        type:\"getLoginAsync\",\r\n        payload:res.data.data\r\n    }\r\n}\r\n\r\nexport async function getStudentsInfAsync({url,params}){\r\n    const res =await axios.post(url,{\r\n        class:params.class,\r\n    });\r\n    return {\r\n        type:\"getStudentsInfAsync\",\r\n        payload:res.data.data\r\n    }\r\n}\r\n\r\n//获取所有用户列表\r\nexport async function getUserListAsync({url,params}){\r\n    const res = await axios.post(url,{\r\n        role:params.role\r\n    });\r\n    return {\r\n        type:\"getUserListAsync\",\r\n        payload:res.data.data\r\n    }\r\n}\r\n\r\n//获取所有用户数量\r\nexport async function getAllUserCount({url}){\r\n    const res=await axios.get(url);\r\n    return {\r\n        type:\"getAllUserCount\",\r\n        payload:res.data.data\r\n    }\r\n}\r\n\r\n\r\n\r\n// export async function searchStudentInf({url,params}){\r\n//     const res = await axios.post(url,{\r\n//         name:params.name,\r\n//         class:params.class\r\n//     });\r\n//     return {\r\n//         type:\"searchStudentInf\",\r\n//         payload:res.data.data\r\n//     }\r\n// }\r\n\r\n// export async function addStudentsInfAsync({url,params}){\r\n//     const res = await axios.post(url,{\r\n//         sNum:params.sNum\r\n//     })\r\n//     return {\r\n//         type:\"addStudentsInfAsync\",\r\n//         payload:res.data.data\r\n//     }\r\n// }\r\n\r\n// export async function GoToLogin({url,params}){\r\n//     const res=await axios.post(url,{\r\n//         username:par\r\n//     })\r\n// }","import \"./index.scss\"\r\nimport echarts from \"echarts\";\r\n\r\nimport React, { Component } from 'react';\r\nimport ReactDOM, { render } from \"react-dom\"\r\nimport { connect } from \"react-redux\"\r\nimport { getMobile, getAllUserCount } from \"../../actions\";\r\nimport { Select, Button } from 'antd';\r\nimport {axios} from \"&\";\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n@connect(\r\n    state => (\r\n        {\r\n            oClass: state.getIn([\"data\", \"oClass\"]),\r\n            userCount: state.getIn([\"data\", \"userCount\"]),\r\n            userRole: state.getIn([\"data\", \"userRole\"])\r\n        }\r\n    )\r\n)\r\n\r\n// export class Home extends React.Component {\r\nclass Home extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state={\r\n            hide: false,\r\n            sClass:1\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.props.dispatch(getAllUserCount({\r\n            url: \"/react/getAllUserCount\"\r\n        }))\r\n        axios.post(\"/react/getUserClass\",{\r\n            username:sessionStorage.username\r\n        }).then(res=>{\r\n            console.log(\"res: \",res)\r\n            if(res.data.code!=200){\r\n                if(sessionStorage.role==0){\r\n                    this.setState({\r\n                        hide:true\r\n                    })\r\n                }\r\n            }\r\n        })\r\n    }\r\n    handleChange = (value) => {\r\n        console.log(value)\r\n        this.setState({\r\n            sClass:value\r\n        })\r\n    }\r\n    handleChooseClass=()=>{\r\n        console.log(\"username: \",sessionStorage.username)\r\n        console.log(\"sClass: \",this.state.sClass)\r\n        axios.post(\"/react/addUserToStudent\",{\r\n            username:sessionStorage.username,\r\n            class:this.state.sClass\r\n        }).then(res=>{\r\n            this.setState({\r\n                hide:false\r\n            })\r\n        })\r\n    }\r\n    render() {\r\n        const {\r\n            userRole\r\n        } = this.props;\r\n        const {\r\n            hide,\r\n            sClass\r\n        } = this.state;\r\n        console.log(userRole)\r\n        setTimeout(() => {\r\n            var myChart1 = echarts.init(document.getElementById('myEchaerts1'));\r\n            // 绘制图表\r\n            myChart1.setOption({\r\n                title: {\r\n                    text: '后台管理系统人员分布柱状图'\r\n                },\r\n                tooltip: {},\r\n                xAxis: {\r\n                    data: ['管理员', '教师', '学生']\r\n                },\r\n                yAxis: {},\r\n                series: [{\r\n                    name: '人数',\r\n                    type: 'bar',\r\n                    data: this.props.userCount\r\n                }]\r\n            });\r\n\r\n            var myChart2 = echarts.init(document.getElementById('myEchaerts2'));\r\n            // 绘制饼状图\r\n            myChart2.setOption({\r\n                title: {\r\n                    text: '后台管理系统人员分布饼状图',\r\n                    subtext: '纯属虚构',\r\n                    left: 'center'\r\n                },\r\n                tooltip: {\r\n                    trigger: 'item',\r\n                    formatter: '{a} <br/>{b} : {c} ({d}%)'\r\n                },\r\n                legend: {\r\n                    orient: 'vertical',\r\n                    left: 'left',\r\n                    data: ['管理员', '教师', '学生']\r\n                },\r\n                series: [\r\n                    {\r\n                        name: '访问来源',\r\n                        type: 'pie',\r\n                        radius: '55%',\r\n                        center: ['50%', '60%'],\r\n                        data: [\r\n                            { value: this.props.userCount[0], name: '管理员' },\r\n                            { value: this.props.userCount[1], name: '教师' },\r\n                            { value: this.props.userCount[2], name: '学生' },\r\n\r\n                        ],\r\n                        emphasis: {\r\n                            itemStyle: {\r\n                                shadowBlur: 10,\r\n                                shadowOffsetX: 0,\r\n                                shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                            }\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n            , 1000);\r\n        return (\r\n            <div className=\"home\">\r\n                <h3>\r\n                    概览\r\n                </h3>\r\n                <div className=\"homeContent\">\r\n                    <div id=\"myEchaerts1\"></div>\r\n                    <div id=\"myEchaerts2\"></div>\r\n                </div>\r\n\r\n                {/* 学生选择班级 */}\r\n                {\r\n                    hide && <div className=\"hideBox\">\r\n                        <div className=\"hideBoxContent\">\r\n                            <div className=\"chooseClass\">\r\n                                <h4>选择班级</h4>\r\n                                <p>您是第一次登录,请选择班级!</p>\r\n                                <Select defaultValue=\"1\" size=\"large\" style={{ width: 120 }} onChange={this.handleChange}>\r\n                                    <Option value=\"1\">一班</Option>\r\n                                    <Option value=\"2\">二班</Option>\r\n\r\n                                    {/* <Option value=\"Yiminghe\">yiminghe</Option> */}\r\n                                </Select>\r\n                                <div className=\"chooseClassButtonBox\">\r\n                                    <Button size=\"large\" type=\"primary\" onClick={this.handleChooseClass}>确认</Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Home;\r\n","import \"./index.scss\"\r\nimport React, { Component } from \"react\";\r\n// import { Head } from \"../../components/head\"\r\n// import { Button, WhiteSpace, WingBlank } from \"antd-mobile\";\r\nimport { connect } from \"react-redux\"\r\nimport { getMobile, getUserListAsync ,updateUserList} from \"../../actions\";\r\nimport { Button, Table, Divider, Input, Tag, Select } from \"antd\";\r\nimport { axios } from \"&\"\r\nconst { Search } = Input;\r\nconst { Option } = Select;\r\n@connect(\r\n    state => (\r\n        {\r\n            // oClass:state.getIn([\"data\",\"oClass\"])\r\n            userList: state.getIn([\"data\", \"userList\"])\r\n        }\r\n    )\r\n)\r\nclass User extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            // userList: []\r\n            hide: false,\r\n            name: \"\",\r\n            role: 0,\r\n            _id: null\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.props.dispatch(getUserListAsync({\r\n            url: \"/react/getUserListNotAll\",\r\n            params: {\r\n                role: 2\r\n            }\r\n        }))\r\n        // console.log(this.props.userList)\r\n\r\n    }\r\n    componentDidUpdate() {\r\n\r\n    }\r\n    handleDel = (i) => {\r\n        var _id = this.props.userList[i]._id\r\n        axios.post(\"/react/delUser\", {\r\n            _id\r\n        }).then(res => {\r\n            this.props.dispatch(getUserListAsync({\r\n                url: \"/react/getUserListNotAll\",\r\n                params: {\r\n                    role: 2\r\n                }\r\n            }))\r\n        })\r\n    }\r\n    handleChange = (i) => {\r\n        var name = this.props.userList[i].username\r\n        this.setState({\r\n            hide: true,\r\n            name,\r\n            _id: this.props.userList[i]._id\r\n        })\r\n    }\r\n    handleCancel = () => {\r\n        this.setState({\r\n            hide: false\r\n        })\r\n    }\r\n    handleToUpdateStu = () => {\r\n        // console.log(this.password.state.value,this.state.role)\r\n        var _id = this.state._id\r\n        var newpwd = this.password.state.value;\r\n        var role = this.state.role\r\n        console.log(this.state.name)\r\n        axios.post(\"/react/changeUserInf\", {\r\n            name: this.state.name,\r\n            _id,\r\n            newpwd,\r\n            role\r\n        }).then(res => {\r\n            this.props.dispatch(getUserListAsync({\r\n                url: \"/react/getUserListNotAll\",\r\n                params: {\r\n                    role: 2\r\n                }\r\n            }))\r\n        })\r\n        this.setState({\r\n            hide: false\r\n        })\r\n    }\r\n    handleChangeSelector = (value) => {\r\n        // console.log(value)\r\n        switch (value) {\r\n            case \"教师\":\r\n                this.setState({\r\n                    role: 1\r\n                })\r\n                return this.state\r\n                break;\r\n            case \"学生\":\r\n                this.setState({\r\n                    role: 0\r\n                })\r\n                return this.state\r\n                break;\r\n            default:\r\n                return this.state\r\n                break;\r\n        }\r\n    }\r\n    //查询\r\n    handleSearch = (value) => {\r\n        if (value) {\r\n            axios.post(\"/react/searchUserInf\", {\r\n                // class: this.props.oClass,\r\n                username: value\r\n            }\r\n            ).then(res => {\r\n                if(res.data.data){\r\n                var arr = []\r\n                arr.push(res.data.data)\r\n                this.props.dispatch(updateUserList(arr))\r\n                }\r\n                \r\n            })\r\n        }else{\r\n            this.props.dispatch(getUserListAsync({\r\n                url: \"/react/getUserListNotAll\",\r\n                params: {\r\n                    role: 2\r\n                }\r\n            }))\r\n        }\r\n    }\r\n    render() {\r\n        const {\r\n            userList,\r\n            location,\r\n            history,\r\n            match,\r\n            dispatch\r\n        } = this.props\r\n\r\n        const {\r\n            hide,\r\n            name,\r\n            role\r\n        } = this.state\r\n        userList.forEach((item, i) => {\r\n            item[\"key\"] = i\r\n        });\r\n        const columns = [\r\n            {\r\n                title: '用户名',\r\n                dataIndex: 'username',\r\n                key: 'username',\r\n                render: text => <a>{text}</a>,\r\n            },\r\n            {\r\n                title: '注册时间',\r\n                dataIndex: 'time',\r\n                key: 'time',\r\n            },\r\n            {\r\n                title: '手机号',\r\n                dataIndex: 'mobile',\r\n                key: 'mobile',\r\n            },\r\n            {\r\n                title: '密码',\r\n                dataIndex: 'password',\r\n                key: 'password',\r\n                render: text => <a>{text}</a>,\r\n            },\r\n            {\r\n                title: '权限',\r\n                key: 'role',\r\n                dataIndex: 'role',\r\n                render: role => (\r\n                    <span>\r\n                        {\r\n                            function toWord() {\r\n                                switch (role) {\r\n                                    case \"2\":\r\n                                        return \"管理员\"\r\n                                        break;\r\n                                    case \"1\":\r\n                                        return \"教师\"\r\n                                        break;\r\n                                    case \"0\":\r\n                                        return \"学生\"\r\n                                    default:\r\n                                        break;\r\n                                }\r\n                            }()\r\n                        }\r\n\r\n                    </span>\r\n                ),\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'action',\r\n                render: (text, record) => (\r\n                    <span>\r\n                        <a onClick={() => this.handleChange(record.key)}>修改</a>\r\n                        <Divider type=\"vertical\" />\r\n                        <a onClick={() => this.handleDel(record.key)}>删除</a>\r\n                    </span>\r\n                ),\r\n            },\r\n        ];\r\n\r\n\r\n        return (\r\n            // <div>\r\n            //     用户界面\r\n            // </div>\r\n            <div className=\"App\">\r\n                <h1>用户界面</h1>\r\n                <br />\r\n                <div className=\"searchInputBox\">\r\n\r\n                <Search\r\n                    placeholder=\"可根据用户名查询\"\r\n                    enterButton=\"Search\"\r\n                    size=\"large\"\r\n                    onSearch={this.handleSearch}\r\n                    />\r\n                    </div>\r\n                <br />\r\n                <Table columns={columns} dataSource={userList} />\r\n                {/* 修改输入框 弹框 */}\r\n\r\n                {\r\n                    hide && <div className=\"InputPop\">\r\n                        <div className=\"InputPopBox\">\r\n                            <span className=\"InputPopBoxContent InputPopBoxName\">\r\n                                用户名:\r\n                            <span>  {name}</span>\r\n                            </span>\r\n\r\n                            <span className=\"InputPopBoxContent\">\r\n                                密码:\r\n                                        <br />\r\n                                <br />\r\n                                <Input placeholder=\"Basic usage\" ref={el => this.password = el} />\r\n                            </span>\r\n\r\n\r\n\r\n                            <Select ref={el => this.role = el} defaultValue=\"学生\" style={{ width: 120 }} className=\"InputPopBoxContent\" onChange={this.handleChangeSelector}>\r\n                                <Option value=\"教师\">教师</Option>\r\n                                <Option value=\"学生\">学生</Option>\r\n                            </Select>\r\n                            <br />\r\n                            <div className=\"InputPopBoxButton\">\r\n                                <Button type=\"danger\" onClick={this.handleCancel}>取消</Button>\r\n                                <Button type=\"primary\" onClick={this.handleToUpdateStu}>修改</Button>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default User;","import React, { Component } from \"react\"\r\n// import { Button, WhiteSpace, WingBlank } from \"antd-mobile\";\r\n// import { Head } from \"../../components/head\"\r\nimport { Button, Table, Divider, Tag } from \"antd\";\r\n// import { Table, Divider, Tag } from 'antd';\r\nimport { connect } from \"react-redux\"\r\nimport { getMobile, getUserListAsync } from \"../../actions\";\r\n\r\n\r\n\r\n@connect(\r\n    state => (\r\n        {\r\n            // oClass: state.getIn([\"data\", \"oClass\"]),\r\n            userList: state.getIn([\"data\", \"userList\"])\r\n        }\r\n    )\r\n)\r\nclass Manager extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            userList: []\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.props.dispatch(getUserListAsync({\r\n            url: \"/react/getUserList\",\r\n            params:{\r\n                role:2\r\n            }\r\n        }))\r\n        console.log(this.props.userList)\r\n\r\n    }\r\n    componentDidUpdate() {\r\n        \r\n    }\r\n    render() {\r\n        const {\r\n            userList,\r\n            location,\r\n            history,\r\n            match,\r\n            dispatch\r\n        } = this.props\r\n        console.log(userList)\r\n        userList.forEach((item, i) => {\r\n            item[\"key\"] = i\r\n        });\r\n        const columns = [\r\n            {\r\n                title: '用户名',\r\n                dataIndex: 'username',\r\n                key: 'username',\r\n                render: text => <a>{text}</a>,\r\n            },\r\n            {\r\n                title: '入职时间',\r\n                dataIndex: 'time',\r\n                key: 'time',\r\n            },\r\n            {\r\n                title: '手机号',\r\n                dataIndex: 'mobile',\r\n                key: 'mobile',\r\n            },\r\n            {\r\n                title: '密码',\r\n                dataIndex: 'password',\r\n                key: 'password',\r\n                render: text => <a>{text}</a>,\r\n            },\r\n            {\r\n                title: '权限',\r\n                key: 'role',\r\n                dataIndex: 'role',\r\n                render: role => (\r\n                    <span>\r\n                        {\r\n                            function toWord() {\r\n                                switch (role) {\r\n                                    case \"2\":\r\n                                        return \"管理员\"\r\n                                        break;\r\n                                    case \"1\":\r\n                                        return \"教师\"\r\n                                        break;\r\n                                    case \"0\":\r\n                                        return \"学生\"\r\n                                    default:\r\n                                        break;\r\n                                }\r\n                            }()\r\n                        }\r\n\r\n                    </span>\r\n                ),\r\n            },\r\n            // {\r\n            //     title: '操作',\r\n            //     key: 'action',\r\n            //     render: (text, record) => (\r\n            //         <span>\r\n            //             <a>Invite {record.name}</a>\r\n            //             <Divider type=\"vertical\" />\r\n            //             <a>Delete</a>\r\n            //         </span>\r\n            //     ),\r\n            // },\r\n        ];\r\n\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <h1>管理员界面</h1>\r\n                <br />\r\n                <Table columns={columns} dataSource={userList} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Manager;","import \"./index.scss\"\r\n\r\nimport React, { Component } from \"react\"\r\nimport { Button, WhiteSpace, WingBlank } from \"antd-mobile\";\r\n\r\nimport { connect } from \"react-redux\"\r\nimport { getLogList,changeLogList} from \"../../actions\";\r\nimport { Table } from 'antd';\r\nimport {axios} from \"&\"\r\n\r\n\r\n  \r\n@connect(\r\n    state => (\r\n        {\r\n            oClass: state.getIn([\"data\", \"oClass\"]),\r\n            logList:state.getIn([\"data\",\"logList\"]),\r\n        }\r\n    )\r\n)\r\n\r\nclass InfStat extends Component {\r\n    constructor() {\r\n        super()\r\n        \r\n    }\r\n    state = {\r\n        selectedRowKeys: [], // Check here to configure the default column\r\n      };\r\n      componentWillMount(){\r\n          this.props.dispatch(getLogList({url:\"/react/getLog\"}))\r\n      }\r\n      \r\n    \r\n      onSelectChange = selectedRowKeys => {\r\n        console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n        this.setState({ selectedRowKeys });\r\n      };\r\n      handleDelOne=(i)=>{\r\n          var _id=this.props.logList[i]._id\r\n        axios.post(\"/react/deleteOneLog\",{\r\n            _id\r\n        }).then(res=>{\r\n            this.props.dispatch(getLogList({url:\"/react/getLog\"}))\r\n            console.log(res)\r\n        })\r\n      }\r\n    render() {\r\n        const {\r\n            logList\r\n        }=this.props;\r\n        console.log(\"logList:\",logList)\r\n        // if(logList[0]){\r\n\r\n            this.props.logList.forEach((item,i) => {\r\n                item[\"key\"]=i\r\n            });\r\n        // }\r\n        const columns = [\r\n            {\r\n                title: '用户名',\r\n                dataIndex: 'username',\r\n            },\r\n            {\r\n              title: '手机号',\r\n              dataIndex: 'mobile',\r\n            },\r\n            {\r\n                title: '登录ip',\r\n                dataIndex: 'ip',\r\n            },\r\n            {\r\n                title: '登录时间',\r\n                dataIndex: 'time',\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'action',\r\n                render: (text, record) => (\r\n                    <span>\r\n                        <a onClick={()=>this.handleDelOne(record.key)}>删除</a>\r\n                    </span>\r\n                ),\r\n            },\r\n          ];\r\n          \r\n        const { selectedRowKeys } = this.state;\r\n        const rowSelection = {\r\n          selectedRowKeys,\r\n          onChange: this.onSelectChange,\r\n          hideDefaultSelections: true,\r\n          // selections: [\r\n          //   {\r\n          //     key: 'all-data',\r\n          //     text: 'Select All Data',\r\n          //     onSelect: () => {\r\n          //       this.setState({\r\n          //         selectedRowKeys: [...Array(46).keys()], // 0...45\r\n          //       });\r\n          //     },\r\n          //   },\r\n          //   {\r\n          //     key: 'odd',\r\n          //     text: 'Select Odd Row',\r\n          //     onSelect: changableRowKeys => {\r\n          //       let newSelectedRowKeys = [];\r\n          //       newSelectedRowKeys = changableRowKeys.filter((key, index) => {\r\n          //         if (index % 2 !== 0) {\r\n          //           return false;\r\n          //         }\r\n          //         return true;\r\n          //       });\r\n          //       this.setState({ selectedRowKeys: newSelectedRowKeys });\r\n          //     },\r\n          //   },\r\n          //   {\r\n          //     key: 'even',\r\n          //     text: 'Select Even Row',\r\n          //     onSelect: changableRowKeys => {\r\n          //       let newSelectedRowKeys = [];\r\n          //       newSelectedRowKeys = changableRowKeys.filter((key, index) => {\r\n          //         if (index % 2 !== 0) {\r\n          //           return true;\r\n          //         }\r\n          //         return false;\r\n          //       });\r\n          //       this.setState({ selectedRowKeys: newSelectedRowKeys });\r\n          //     },\r\n          //   },\r\n          // ],\r\n        };\r\n\r\n\r\n\r\n        return (\r\n            <div className=\"InfStat\">\r\n                <h3>信息统计</h3>\r\n                <br/>\r\n                <br/>\r\n                <Table rowSelection={rowSelection} columns={columns} dataSource={logList} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InfStat;","import \"./index.scss\";\r\nimport url from \"url\"\r\nimport querystring from \"querystring\";\r\nimport { axios } from \"&\";\r\nimport React, { Component } from \"react\"\r\n\r\nimport { connect } from \"react-redux\"\r\nimport { changeClass, getStudentsInfAsync, updateStudents, searchStudentInf } from \"../../actions\";\r\n\r\nimport { Table, Divider, Tag, Button, Input, Select } from 'antd';\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Option } = Select;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\n@connect(\r\n    state => (\r\n        {\r\n            oClass: state.getIn([\"data\", \"oClass\"]),\r\n            studentList: state.getIn([\"data\", \"studentList\"]),\r\n        }\r\n    )\r\n)\r\n\r\nclass Class extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            hide: false,\r\n            hideA: false,\r\n            hideU: false,\r\n            name: null,\r\n            sNum: null,\r\n            tClass:null,\r\n            subject: \"chinese\",\r\n            list: [1, 2, 3],\r\n            userRole:sessionStorage.role\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        var search = this.props.location.search\r\n        search = url.parse(search).query\r\n        search = querystring.parse(search).class\r\n        this.setState({tClass:search})\r\n        this.props.dispatch(changeClass(search))\r\n        this.props.dispatch(getStudentsInfAsync({\r\n            url: \"/react/getStudentsInf\", params: {\r\n                class: search\r\n            }\r\n        }))\r\n    }\r\n    componentDidUpdate() {\r\n        var search = this.props.location.search\r\n        search = url.parse(search).query\r\n        search = querystring.parse(search).class\r\n        this.props.dispatch(changeClass(search))\r\n        if(this.state.tClass!=search){\r\n            this.props.dispatch(getStudentsInfAsync({\r\n                url: \"/react/getStudentsInf\", params: {\r\n                    class: search\r\n                }\r\n            }))\r\n            this.setState({\r\n                tClass:search\r\n            })\r\n        }\r\n    }\r\n    handleChange = (value) => {\r\n        switch (value) {\r\n            case \"语文\":\r\n                this.setState({\r\n                    subject: \"chinese\"\r\n                })\r\n                return this.state;\r\n                break;\r\n            case \"数学\":\r\n                this.setState({\r\n                    subject: \"math\"\r\n                })\r\n                return this.state;\r\n                break;\r\n            case \"英语\":\r\n                this.setState({\r\n                    subject: \"english\"\r\n                })\r\n                return this.state;\r\n                break;\r\n\r\n            default:\r\n                return this.state;\r\n                break;\r\n        }\r\n    }\r\n    handleCancel = () => {\r\n        this.setState({\r\n            hide: false,\r\n            hideA: false,\r\n            hideU: false\r\n        })\r\n    }\r\n    //点击添加按钮\r\n    handleAddStudentsInf = () => {\r\n        this.setState({\r\n            hide: true,\r\n            hideA: true,\r\n            hideU: false\r\n        })\r\n    }\r\n    //确认添加\r\n    handleToAddStu = () => {\r\n        axios.post(\r\n            '/react/addStudentsInf', {\r\n            name: this.name.state.value,\r\n            class: this.props.oClass,\r\n            english: this.english.state.value,\r\n            math: this.math.state.value,\r\n            chinese: this.chinese.state.value,\r\n        }\r\n        ).then(res => {\r\n            // console.log(this.props.oClass)\r\n            this.props.dispatch(updateStudents(res.data.data))\r\n        })\r\n        this.setState({\r\n            hide: false,\r\n            hideA: false\r\n        })\r\n    }\r\n    //点击修改按钮 更新\r\n    handleUpdateStudentsInf = (i) => {\r\n        this.setState({\r\n            hide: true,\r\n            hideA: false,\r\n            hideU: true,\r\n            name: this.props.studentList[i].name,\r\n            sNum: this.props.studentList[i].sNum\r\n        })\r\n    }\r\n    //确认更新\r\n    handleToUpdateStu = () => {\r\n        console.log(this.props.oClass)\r\n        axios.post(\"/react/updateStudentsInf\", {\r\n            class: this.props.oClass,\r\n            sNum: this.state.sNum,\r\n            subject: this.state.subject,\r\n            score: this.score.state.value\r\n        }).then(res => {\r\n            this.props.dispatch(updateStudents(res.data.data))\r\n        })\r\n        this.setState({\r\n            hide: false,\r\n            hideU: false\r\n        })\r\n    }\r\n    //删除\r\n    handleDelete = (i) => {\r\n        axios.post(\"/react/deleteStu\", {\r\n            _id: this.props.studentList[i]._id\r\n        }).then(res => {\r\n            var search = this.props.location.search\r\n            search = url.parse(search).query\r\n            search = querystring.parse(search).class\r\n            this.props.dispatch(this.props.dispatch(getStudentsInfAsync({\r\n                url: \"/react/getStudentsInf\", params: {\r\n                    class: search\r\n                }\r\n            })))\r\n        })\r\n    }\r\n    //查询\r\n    handleSearch = (value) => {\r\n        if (value) {\r\n            axios.post(\"/react/searchStudentInf\", {\r\n                class: this.props.oClass,\r\n                name: value\r\n            }\r\n            ).then(res => {\r\n                if(res.data.data){\r\n                var arr = []\r\n                arr.push(res.data.data)\r\n                this.props.dispatch(updateStudents(arr))\r\n                }\r\n                \r\n            })\r\n        }else{\r\n            this.props.dispatch(getStudentsInfAsync({\r\n                url: \"/react/getStudentsInf\", params: {\r\n                    class: this.props.oClass\r\n                }\r\n            }))\r\n        }\r\n    }\r\n    render() {\r\n        const {\r\n            oClass,\r\n            studentList,\r\n            location,\r\n            history,\r\n            match,\r\n            dispatch\r\n        } = this.props\r\n        const {\r\n            hide,\r\n            hideA,\r\n            hideU,\r\n            list,\r\n            name,\r\n            sNum,\r\n            userRole\r\n        } = this.state\r\n        studentList.forEach((item, i) => {\r\n            item[\"key\"] = i\r\n        });\r\n        return (\r\n            <div className=\"classContent\">\r\n                <h3>\r\n                    班级管理 -- {oClass}班\r\n                </h3>\r\n                <div>\r\n                    <Search\r\n                        placeholder=\"可根据姓名查询\"\r\n                        enterButton=\"Search\"\r\n                        size=\"large\"\r\n                        onSearch={this.handleSearch}\r\n                    />\r\n                    <br />\r\n                    <br />\r\n                </div>\r\n                {userRole!=0&&<Button type=\"primary\" onClick={this.handleAddStudentsInf}>添加学生信息</Button>}\r\n                <div className=\"tableBox\">\r\n\r\n                    <Table dataSource={studentList}>\r\n                        <Column title=\"姓名\" dataIndex=\"name\" key=\"name\" />\r\n                        <Column title=\"班级\" dataIndex=\"class\" key=\"class\" />\r\n                        <ColumnGroup title=\"成绩\">\r\n                            <Column sorter={(a, b) => a.chinese - b.chinese} title=\"语文\" dataIndex=\"chinese\" key=\"chinese\" />\r\n                            <Column sorter={(a, b) => a.math - b.math} title=\"数学\" dataIndex=\"math\" key=\"math\" />\r\n                            <Column sorter={(a, b) => a.english - b.english} title=\"英语\" dataIndex=\"english\" key=\"english\" />\r\n                            \r\n                        </ColumnGroup>\r\n\r\n                        {\r\n                        userRole!=0&&<Column\r\n                            title=\"操作\"\r\n                            key=\"action\"\r\n                            render={(text, record) => (\r\n                                <span>\r\n                                    <a onClick={() => this.handleUpdateStudentsInf(record.key)}>修改</a>\r\n                                    <Divider type=\"vertical\" />\r\n                                    <a onClick={() => this.handleDelete(record.key)} ref={el => this[`item`] = el}>删除</a>\r\n                                </span>\r\n                            )}\r\n                        />\r\n                            }\r\n                    </Table>\r\n                </div>\r\n\r\n                {/* 添加输入框 弹框 */}\r\n\r\n                {\r\n                    hide && <div className=\"InputPop\">\r\n                        <div className=\"InputPopBox\">\r\n                            <span className=\"InputPopBoxContent InputPopBoxName\">\r\n                                姓名:\r\n                            {\r\n                                    hideA ? <Input placeholder=\"Basic usage\" ref={el => this.name = el} /> : <span>  {name}</span>\r\n                                }\r\n                            </span>\r\n\r\n                            {\r\n                                hideA && <div>\r\n                                    <span className=\"InputPopBoxContent\">\r\n                                        语文:\r\n                            <Input placeholder=\"Basic usage\" ref={el => this.chinese = el} />\r\n                                    </span>\r\n                                    <span className=\"InputPopBoxContent\">\r\n                                        数学:\r\n                            <Input placeholder=\"Basic usage\" ref={el => this.math = el} />\r\n                                    </span>\r\n                                    <span className=\"InputPopBoxContent\">\r\n                                        英语:\r\n                            <Input placeholder=\"Basic usage\" ref={el => this.english = el} />\r\n                                    </span>\r\n                                </div>\r\n                            }\r\n\r\n\r\n                            {hideU && <div>\r\n                                <span className=\"InputPopBoxContent\">\r\n                                    成绩:\r\n                            <Input placeholder=\"Basic usage\" ref={el => this.score = el} />\r\n                                </span>\r\n                                <Select ref={el => this.role = el} defaultValue=\"语文\" style={{ width: 120 }} className=\"InputPopBoxContent\" onChange={this.handleChange}>\r\n                                    <Option value=\"语文\">语文</Option>\r\n                                    <Option value=\"数学\">数学</Option>\r\n                                    <Option value=\"英语\">英语</Option>\r\n                                </Select>\r\n                            </div>\r\n                            }\r\n                            <br />\r\n                            <div className=\"InputPopBoxButton\">\r\n                                <Button type=\"danger\" onClick={this.handleCancel}>取消</Button>\r\n                                {\r\n                                    hideA ? <Button type=\"primary\" onClick={this.handleToAddStu}>确认</Button> : <Button type=\"primary\" onClick={this.handleToUpdateStu}>修改</Button>\r\n                                }\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Class\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import \"./index.scss\"\r\n\r\nimport React,{Component} from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {getLoginAsync} from \"../../actions\"\r\n\r\n@connect(\r\n    state=>(\r\n        {\r\n            oClass:state.getIn([\"data\",\"oClass\"])\r\n        }\r\n    )\r\n)\r\nclass About extends Component{\r\n    render(){\r\n        const{\r\n            location,\r\n            dispatch\r\n        }=this.props\r\n        return(\r\n            <div>\r\n                <h3 className=\"aboutTitle\">联系我</h3>\r\n                <div className=\"aboutContent\">\r\n                    <p className=\"aboutContentItem\">姓名: nc</p>\r\n                    <p className=\"aboutContentItem\">邮箱: 648978131@qq.com</p>\r\n                    <p className=\"aboutContentItem\">电话: 138****1881</p>\r\n                    <p className=\"aboutContentItem\">QQ: 648978131</p>\r\n                </div>\r\n\r\n                {/* <button onClick={()=>dispatch(getLoginAsync({url:'react/getLogin',params:{username:\"admin\",password:\"admin\"}}))}>点击登录</button> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","import \"./index.scss\"\r\n\r\nimport React, { Component } from 'react';\r\nimport ReactDOM, { render } from \"react-dom\"\r\nimport { connect } from \"react-redux\"\r\nimport { getMobile } from \"../../actions\";\r\nimport { Input, Button ,message} from 'antd';\r\nimport {axios} from \"&\";\r\n\r\n\r\n\r\n@connect(\r\n    state => (\r\n        {\r\n            oClass: state.getIn([\"data\", \"oClass\"])\r\n        }\r\n    )\r\n)\r\n\r\n// export class Home extends React.Component {\r\nclass Changepwd extends React.Component {\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            username:sessionStorage.username\r\n        }\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n    handleChangePwd=()=>{\r\n        // console.log(this.oldpwd.state.value,this.newpwd.state.value)\r\n        var oldpwd=this.oldpwd.state.value;\r\n        var newpwd=this.newpwd.state.value;\r\n        if(oldpwd==newpwd){\r\n            message.warning('两次输入的密码一致');\r\n        }else{\r\n            axios.post(\"/react/changepwd\",{\r\n                username:this.state.username,\r\n                oldpwd,\r\n                newpwd\r\n            }).then(res=>{\r\n                if(res.data.code==200){\r\n                    sessionStorage.clear()\r\n                    this.props.history.push(\"/login\")\r\n                }\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        const {\r\n            oClass\r\n        } = this.props;\r\n        return (\r\n            <div className=\"changebg\">\r\n                <div className=\"changepwd\">\r\n                    <h3 style={{ color: \"#fff\" }}>\r\n                        修改密码\r\n                    </h3>\r\n                    <div className=\"changepwdContent\" >\r\n                        <span>\r\n                            旧密码:\r\n                        <Input placeholder=\"请输入旧密码\" ref={el=>this.oldpwd=el}/>\r\n                        </span>\r\n                        <span>\r\n                            新密码:\r\n                        <Input placeholder=\"请输入新密码\" ref={el=>this.newpwd=el}/>\r\n                        </span>\r\n                        <div>\r\n                            <Button type=\"primary\" onClick={this.handleChangePwd}>确认</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Changepwd;\r\n","import \"./index.scss\"\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\"\r\nimport { Table, Divider, Tag, Button, Input, Select } from 'antd';\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Option } = Select;\r\nconst { Search } = Input;\r\n@connect(\r\n    state => ({\r\n\r\n    })\r\n)\r\nclass Interview extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"interview\">\r\n                <h3>\r\n                    面试宝典\r\n                </h3>\r\n                <div className=\"interviewBox\">\r\n                    <Search\r\n                        placeholder=\"可根据题目模糊搜索\"\r\n                        enterButton=\"Search\"\r\n                        size=\"large\"\r\n                        onSearch={this.handleSearch}\r\n                    />\r\n                    <br />\r\n                    <br />\r\n                    <Button type=\"primary\" onClick={this.handleAddStudentsInf}>添加面试题</Button>\r\n                \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Interview;","\r\nimport \"./index.scss\"\r\nimport React, { Component } from \"react\"\r\nimport querystring from \"querystring\"\r\nimport url from \"url\"\r\n// import ReactDOM, { render } from \"react-dom\"\r\nimport { connect } from \"react-redux\"\r\n\r\nimport { Dropdown, Layout, Menu, Breadcrumb, Icon } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport {\r\n    Switch,\r\n    Route,\r\n    Redirect,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport Home from \"../home\";\r\nimport User from \"../user\"\r\nimport Manager from \"../manager\";\r\nimport InfStat from \"../infstat\";\r\nimport Class from \"../class\"\r\nimport About from \"../about\";\r\nimport Changepwd from \"../changepwd\";\r\nimport Interview from \"../interview\";\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\n@connect(\r\n    state => (\r\n        {\r\n            oClass: state.getIn([\"data\", \"oClass\"]),\r\n            userCount: state.getIn([\"data\", \"userCount\"]),\r\n        }\r\n    )\r\n)\r\n// export class Main extends React.Component {\r\nclass Main extends React.Component {\r\n    state = {\r\n        collapsed: false,\r\n        username: sessionStorage.username,\r\n        userRole: sessionStorage.role,\r\n        showToAdmin: false,\r\n        showToTeacher: false,\r\n        showToStudent: false\r\n    };\r\n\r\n\r\n    onCollapse = collapsed => {\r\n        console.log(collapsed);\r\n        this.setState({ collapsed });\r\n        document.getElementsByClassName(\"title\")[0].innerHTML = !this.state.collapsed ? \"\" : \"后台管理系统\"\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (!sessionStorage.token) {\r\n            this.props.history.push(\"/register\")\r\n        }\r\n        switch (this.state.userRole) {\r\n            case \"2\":\r\n                this.setState({\r\n                    showToAdmin: true\r\n                })\r\n                return this.state\r\n                break;\r\n            case \"1\":\r\n                this.setState({\r\n                    showToTeacher: true\r\n                })\r\n                return this.state\r\n                break;\r\n            case \"0\":\r\n                this.setState({\r\n                    showToStudent: true\r\n                })\r\n                return this.state\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        // 刷新高亮\r\n        // var pathname=this.props.location.pathname\r\n        // if(!sessionStorage.pathname){\r\n        //     sessionStorage.pathname=pathname\r\n        // }else{\r\n        //     if(sessionStorage.pathname!=pathname){\r\n        //         var link=document.querySelectorAll(\".ant-menu-item a\")\r\n        //         console.log(link)\r\n        //         for(var i=0;i<link.length;i++){\r\n        //             link[i].parentNode.classList.remove(\"ant-menu-item-selected\")\r\n        //             var href=link[i].children[0].href;\r\n        //             href=url.parse(href).pathname;\r\n        //             console.log(href);\r\n\r\n        //             if(href==pathname){\r\n        //                 link[i].parentNode.classList.add(\"ant-menu-item-selected\")\r\n        //                 return \"\"\r\n        //             }\r\n        //         }\r\n        //     }\r\n        // }\r\n\r\n        // console.log(this.props.location.pathname)\r\n    }\r\n    handleChangePwd = () => {\r\n        this.props.history.push(\"/main/changepwd\")\r\n    }\r\n    handleLogout = () => {\r\n        sessionStorage.clear();\r\n        this.props.history.push(\"/register\")\r\n    }\r\n    render() {\r\n        const menu = (\r\n            <Menu>\r\n                <Menu.Item>\r\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" onClick={this.handleChangePwd}>\r\n                        修改密码\r\n                </a>\r\n                </Menu.Item>\r\n                <Menu.Item>\r\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" onClick={this.handleLogout}>\r\n                        退出\r\n                </a>\r\n                </Menu.Item>\r\n            </Menu>\r\n        );\r\n        const {\r\n            username,\r\n            showToAdmin,\r\n            showToTeacher,\r\n            showToStudent\r\n        } = this.state\r\n        // const {\r\n        //     userRole,\r\n        // } = this.props\r\n        return (\r\n            <div>\r\n                {showToAdmin&&<Layout style={{ minHeight: '100vh' }}>\r\n                    <Sider collapsible collapsed={this.state.collapsed} onCollapse={this.onCollapse}>\r\n                        <div className=\"logo\" >\r\n                            <div></div>\r\n                            {/* <span className=\"title\">{showTitle&&systemTitle}</span> */}\r\n                            <span className=\"title\">后台管理系统</span>\r\n\r\n                        </div>\r\n                        <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\r\n                            <Menu.Item key=\"1\">\r\n                                <Link to={\"/main/home\"}>\r\n                                    <Icon type=\"pie-chart\" />\r\n                                    <span>概览</span>\r\n                                </Link>\r\n                            </Menu.Item>\r\n\r\n                            <Menu.Item key=\"2\">\r\n                                <Link to={\"/main/infstat\"}>\r\n                                    <Icon type=\"desktop\" />\r\n                                    <span>信息统计</span>\r\n                                </Link>\r\n                            </Menu.Item>\r\n                            <SubMenu\r\n                                key=\"sub1\"\r\n                                title={\r\n                                    <span>\r\n                                        <Icon type=\"user\" />\r\n                                        <span>用户管理</span>\r\n                                    </span>\r\n                                }\r\n                            >\r\n                                <Menu.Item key=\"3\">\r\n                                    <Link to={\"/main/manager\"}>\r\n                                        管理员\r\n                                    </Link>\r\n                                </Menu.Item>\r\n                                <Menu.Item key=\"4\">\r\n                                    <Link to={\"/main/user\"}>\r\n                                        用户\r\n                                    </Link>\r\n                                </Menu.Item>\r\n\r\n                            </SubMenu>\r\n\r\n                            <SubMenu\r\n                                key=\"sub2\"\r\n                                title={\r\n                                    <span>\r\n                                        <Icon type=\"team\" />\r\n                                        <span>班级信息</span>\r\n                                    </span>\r\n                                }\r\n                            >\r\n                                <Menu.Item key=\"6\">\r\n                                    <Link to={\"/main/class?class=1\"}>\r\n                                        Class 1\r\n                                    </Link>\r\n                                </Menu.Item>\r\n                                <Menu.Item key=\"8\">\r\n                                    <Link to={\"/main/class?class=2\"}>\r\n                                        Class 2\r\n                                    </Link>\r\n                                </Menu.Item>\r\n                            </SubMenu>\r\n                            <Menu.Item key=\"9\">\r\n                                <Link to={\"/main/interview\"}>\r\n                                    <Icon type=\"file\" />\r\n                                    <span>\r\n                                        面试宝典\r\n                                    </span>\r\n                                </Link>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"10\">\r\n                                <Link to={\"/main/about\"}>\r\n                                    <Icon type=\"file\" />\r\n                                    <span>\r\n                                        联系我们\r\n                                    </span>\r\n                                </Link>\r\n                            </Menu.Item>\r\n                        </Menu>\r\n                    </Sider>\r\n                    <Layout>\r\n                        <Header style={{ background: '#fff', padding: 0 }} >\r\n\r\n                            <div className=\"headerBox\" >\r\n                                <div className=\"headerBoxContent\">\r\n                                    <Dropdown overlay={menu}>\r\n                                        <a className=\"ant-dropdown-link\">\r\n                                            {username} <Icon type=\"down\" />\r\n                                        </a>\r\n                                    </Dropdown>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </Header>\r\n                        <Content style={{ margin: '0 16px' }}>\r\n                            <Switch>\r\n                                <Route path=\"/main/home\" component={Home} />\r\n                                <Route path=\"/main/manager\" component={Manager} />\r\n                                <Route path=\"/main/user\" component={User} />\r\n                                <Route path=\"/main/infstat\" component={InfStat} />\r\n                                <Route path=\"/main/class\" component={Class} />\r\n                                <Route path=\"/main/about\" component={About} />\r\n                                <Route path=\"/main/changepwd\" component={Changepwd} />\r\n                                <Route path=\"/main/interview\" component={Interview}/>\r\n                                {/* <Route path=\"/main/register\" component={Register}/> */}\r\n                                <Route render={() => (<Redirect to=\"/main/home\" />)} />\r\n                            </Switch>\r\n                        </Content>\r\n                    </Layout>\r\n                </Layout>}\r\n\r\n                {\r\n                    showToTeacher&&<Layout style={{ minHeight: '100vh' }}>\r\n                    <Sider collapsible collapsed={this.state.collapsed} onCollapse={this.onCollapse}>\r\n                        <div className=\"logo\" >\r\n                            <div></div>\r\n                            {/* <span className=\"title\">{showTitle&&systemTitle}</span> */}\r\n                            <span className=\"title\">后台管理系统</span>\r\n\r\n                        </div>\r\n                        <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\r\n                            <Menu.Item key=\"1\">\r\n                                <Link to={\"/main/home\"}>\r\n                                    <Icon type=\"pie-chart\" />\r\n                                    <span>概览</span>\r\n                                </Link>\r\n                            </Menu.Item>\r\n\r\n                            <SubMenu\r\n                                key=\"sub2\"\r\n                                title={\r\n                                    <span>\r\n                                        <Icon type=\"team\" />\r\n                                        <span>班级信息</span>\r\n                                    </span>\r\n                                }\r\n                            >\r\n                                <Menu.Item key=\"6\">\r\n                                    <Link to={\"/main/class?class=1\"}>\r\n                                        Class 1\r\n                                    </Link>\r\n                                </Menu.Item>\r\n                                <Menu.Item key=\"8\">\r\n                                    <Link to={\"/main/class?class=2\"}>\r\n                                        Class 2\r\n                                    </Link>\r\n                                </Menu.Item>\r\n                            </SubMenu>\r\n                            <Menu.Item key=\"9\">\r\n                                <Link to={\"/main/interview\"}>\r\n                                    <Icon type=\"file\" />\r\n                                    <span>\r\n                                        面试宝典\r\n                                    </span>\r\n                                </Link>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"10\">\r\n                                <Link to={\"/main/about\"}>\r\n                                    <Icon type=\"file\" />\r\n                                    <span>\r\n                                        联系我们\r\n                                    </span>\r\n                                </Link>\r\n                            </Menu.Item>\r\n                        </Menu>\r\n                    </Sider>\r\n                    <Layout>\r\n                        <Header style={{ background: '#fff', padding: 0 }} >\r\n\r\n                            <div className=\"headerBox\" >\r\n                                <div className=\"headerBoxContent\">\r\n                                    <Dropdown overlay={menu}>\r\n                                        <a className=\"ant-dropdown-link\">\r\n                                            {username} <Icon type=\"down\" />\r\n                                        </a>\r\n                                    </Dropdown>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </Header>\r\n                        <Content style={{ margin: '0 16px' }}>\r\n                            <Switch>\r\n                                <Route path=\"/main/home\" component={Home} />\r\n                                <Route path=\"/main/class\" component={Class} />\r\n                                <Route path=\"/main/about\" component={About} />\r\n                                <Route path=\"/main/changepwd\" component={Changepwd} />\r\n                                <Route path=\"/main/interview\" component={Interview}/>\r\n                                {/* <Route path=\"/main/register\" component={Register}/> */}\r\n                                <Route render={() => (<Redirect to=\"/main/home\" />)} />\r\n                            </Switch>\r\n                        </Content>\r\n                    </Layout>\r\n                </Layout>\r\n                }\r\n                {\r\n                    showToStudent&&<Layout style={{ minHeight: '100vh' }}>\r\n                    <Sider collapsible collapsed={this.state.collapsed} onCollapse={this.onCollapse}>\r\n                        <div className=\"logo\" >\r\n                            <div></div>\r\n                            {/* <span className=\"title\">{showTitle&&systemTitle}</span> */}\r\n                            <span className=\"title\">后台管理系统</span>\r\n\r\n                        </div>\r\n                        <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\r\n                            <Menu.Item key=\"1\">\r\n                                <Link to={\"/main/home\"}>\r\n                                    <Icon type=\"pie-chart\" />\r\n                                    <span>概览</span>\r\n                                </Link>\r\n                            </Menu.Item>\r\n\r\n                            <SubMenu\r\n                                key=\"sub2\"\r\n                                title={\r\n                                    <span>\r\n                                        <Icon type=\"team\" />\r\n                                        <span>班级信息</span>\r\n                                    </span>\r\n                                }\r\n                            >\r\n                                <Menu.Item key=\"6\">\r\n                                    <Link to={\"/main/class?class=1\"}>\r\n                                        Class 1\r\n                                    </Link>\r\n                                </Menu.Item>\r\n                                <Menu.Item key=\"8\">\r\n                                    <Link to={\"/main/class?class=2\"}>\r\n                                        Class 2\r\n                                    </Link>\r\n                                </Menu.Item>\r\n                            </SubMenu>\r\n                            <Menu.Item key=\"9\">\r\n                                <Link to={\"/main/interview\"}>\r\n                                    <Icon type=\"read\" />\r\n                                    <span>\r\n                                        面试宝典\r\n                                    </span>\r\n                                </Link>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"10\">\r\n                                <Link to={\"/main/about\"}>\r\n                                    <Icon type=\"file\" />\r\n                                    <span>\r\n                                        联系我们\r\n                                    </span>\r\n                                </Link>\r\n                            </Menu.Item>\r\n                        </Menu>\r\n                    </Sider>\r\n                    <Layout>\r\n                        <Header style={{ background: '#fff', padding: 0 }} >\r\n\r\n                            <div className=\"headerBox\" >\r\n                                <div className=\"headerBoxContent\">\r\n                                    <Dropdown overlay={menu}>\r\n                                        <a className=\"ant-dropdown-link\">\r\n                                            {username} <Icon type=\"down\" />\r\n                                        </a>\r\n                                    </Dropdown>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </Header>\r\n                        <Content style={{ margin: '0 16px' }}>\r\n                            <Switch>\r\n                                <Route path=\"/main/home\" component={Home} />\r\n                                <Route path=\"/main/class\" component={Class} />\r\n                                <Route path=\"/main/about\" component={About} />\r\n                                <Route path=\"/main/changepwd\" component={Changepwd} />\r\n                                <Route path=\"/main/interview\" component={Interview}/>\r\n                                {/* <Route path=\"/main/register\" component={Register}/> */}\r\n                                <Route render={() => (<Redirect to=\"/main/home\" />)} />\r\n                            </Switch>\r\n                        </Content>\r\n                    </Layout>\r\n                </Layout>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Main","import \"./index.scss\"\r\nimport  React,{ Component } from \"react\"\r\nexport class Search extends Component{\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h3>search -- search -- 查询</h3>\r\n            </div>\r\n        )\r\n    }\r\n}","import \"./index.scss\"\r\nimport React, { Component } from \"react\"\r\n// import {history} from \"&\"\r\nimport { Popover, NavBar, Icon } from \"antd-mobile\";\r\n\r\nconst Item = Popover.Item;\r\n\r\nconst myImg = src => <img src={`https://gw.alipayobjects.com/zos/rmsportal/${src}.svg`} className=\"am-icon am-icon-xs\" alt=\"\" />;\r\n\r\nexport class Head extends Component {\r\n    state = {\r\n        visible: false,\r\n        selected: '',\r\n    };\r\n    handleToGoBack=()=>{\r\n        history.goBack()\r\n    }\r\n    onSelect = (opt) => {\r\n        console.log(opt.props.value);\r\n        this.setState({\r\n            visible: false,\r\n            selected: opt.props.value,\r\n        });\r\n        // if(opt.props.value==\"account\"){\r\n        //     history.push(\"/login\")\r\n        // }else if(opt.props.value==\"mobile\"){\r\n        //     history.push(\"/mobile\")\r\n            \r\n        // }\r\n    };\r\n    handleVisibleChange = (visible) => {\r\n        this.setState({\r\n            visible,\r\n        });\r\n    };\r\n    render() {\r\n        const{\r\n            title,\r\n            show,\r\n            hide\r\n        }=this.props\r\n        return (<div>\r\n            <NavBar\r\n                mode=\"light\"\r\n                icon={show&&<Icon type=\"left\"/>}\r\n                onLeftClick={()=>this.handleToGoBack()}\r\n                rightContent={\r\n                    <Popover mask\r\n                        overlayClassName=\"fortest\"\r\n                        overlayStyle={{ color: 'currentColor' }}\r\n                        visible={this.state.visible}\r\n                        overlay={[\r\n                            (<Item key=\"4\" value=\"account\" icon={myImg('tOtXhkIWzwotgGSeptou')} data-seed=\"logId\">账号密码登录</Item>),\r\n                            (<Item key=\"5\" value=\"mobile\" icon={myImg('PKAgAqZWJVNwKsAJSmXd')} style={{ whiteSpace: 'nowrap' }}>验证码登录</Item>),\r\n                            // (<Item key=\"6\" value=\"button ct\" icon={myImg('uQIYTFeRrjPELImDRrPt')}>\r\n                            //     <span style={{ marginRight: 5 }}>Help</span>\r\n                            // </Item>),\r\n                        ]}\r\n                        align={{\r\n                            overflow: { adjustY: 0, adjustX: 0 },\r\n                            offset: [-10, 0],\r\n                        }}\r\n                        onVisibleChange={this.handleVisibleChange}\r\n                        onSelect={this.onSelect}\r\n                    >\r\n                        <div style={{\r\n                            height: '100%',\r\n                            padding: '0 15px',\r\n                            marginRight: '-15px',\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                        }}\r\n                        >\r\n                            {hide&&<Icon type=\"ellipsis\" />}\r\n                        </div>\r\n                    </Popover>\r\n                }\r\n            >\r\n                {title}\r\n      </NavBar>\r\n        </div>);\r\n    }\r\n}","import \"./index.scss\"\r\nimport React, { Component } from \"react\"\r\n// import {  } from \"antd-mobile\"\r\nimport {Head} from \"~/components/head\"\r\nexport class Mobile extends Component {\r\n    // constructor() {\r\n    //     super();\r\n\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Head\r\n                    title=\"验证码登录\"\r\n                    show={true}\r\n                />\r\n                <h3>验证码登录</h3>\r\n            </div>\r\n        )\r\n    }\r\n}","import \"./index.scss\"\r\nimport React, { Component } from \"react\"\r\n// import { WhiteSpace, WingBlank, List, InputItem, Button } from \"antd-mobile\"\r\n// import { Head } from \"~/components/head\"\r\nimport {\r\n    Layout,\r\n    Form,\r\n    Icon,\r\n    Input,\r\n    Button,\r\n} from \"antd\"\r\nimport { axios } from \"&\"\r\n\r\nexport const mReg = /^1(3|4|5|6|7|8)\\d{9}$/;\r\nexport const cReg = /^\\d{4}$/\r\nexport const uReg = /\\w{2}/\r\nexport const pReg = /^\\d{6}$/\r\n\r\nlet timer = null\r\nexport class Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            codeFlag: false,\r\n            loginFlag: false,\r\n            count: 60,\r\n            txt: \"发送验证码\",\r\n            toggle: true\r\n        }\r\n    }\r\n    handleGotoLogin = () => {\r\n        axios.post(\"/react/sendCode\", {\r\n            mobile: 15072095677\r\n        }).then(res => {\r\n            console.log(res)\r\n        })\r\n    }\r\n    handleCheckUsername = () => {\r\n\r\n    }\r\n    handleCheckPassword = () => {\r\n\r\n    }\r\n    handleCheckMobile = (e) => {\r\n        var code = this.code.state.value\r\n        var mobile = e.target.value\r\n        if (this.state.toggle) {\r\n            this.setState({\r\n                codeFlag: mReg.test(mobile),\r\n                loginFlag: mReg.test(mobile) && cReg.test(code)\r\n            })\r\n        }\r\n    }\r\n    handleCheckCode = (e) => {\r\n        var username = this.username.state.value;\r\n        var password = this.password.state.value;\r\n        var mobile = this.mobile.state.value;\r\n        var code = e.target.value\r\n        this.setState({\r\n            // loginFlag: uReg.test(username)&&pReg(password)&&mReg.test(mobile) && cReg.test(code)\r\n            loginFlag: mReg.test(mobile) && cReg.test(code)\r\n        })\r\n    }\r\n    start = () => {\r\n        if (this.state.count > 1) {\r\n            this.setState({\r\n                count: --this.state.count,\r\n                txt: `剩下 ${this.state.count} S`,\r\n                codeFlag: false,\r\n                toggle: false\r\n            })\r\n        } else {\r\n            clearInterval(timer);\r\n            timer = null;\r\n            this.setState({\r\n                count: 60,\r\n                txt: \"发送验证码\",\r\n                codeFlag: true,\r\n                toggle: true\r\n            })\r\n        }\r\n    }\r\n\r\n    computedTime = () => {\r\n        this.start();\r\n        timer = setInterval(this.start, 1000);\r\n    }\r\n    handleSendCode = () => {\r\n        this.computedTime();\r\n        // axios.post(\"/react/aly/sendSms\",{\r\n        //     mobile:this.mobile.state.value\r\n        // }).then(res=>{\r\n\r\n        // })\r\n        axios.post(\"/react/yum/sendSms\", {\r\n            mobile: this.mobile.state.value\r\n        }).then(res => {\r\n\r\n        })\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        axios.post(\"/react/checkCode\", {\r\n            mobile: this.mobile.state.value,\r\n            code: this.code.state.value\r\n        }).then(res => {\r\n            if (!!res.data.type) {\r\n                sessionStorage.token = res.data.token;\r\n                sessionStorage.mobile = this.mobile.state.value;\r\n                clearInterval(timer);\r\n                timer = null;\r\n                var time = new Date();\r\n                time = time.toLocaleDateString();\r\n                axios.post(\"/react/getRegister\", {\r\n                    username: this.username.state.value,\r\n                    password: this.password.state.value,\r\n                    mobile: this.mobile.state.value,\r\n                    time: time\r\n                }).then(res => {\r\n                    // console.log(666)\r\n                    if (res.data.code == 200) {\r\n                        this.props.history.push(\"/register\");\r\n                    }\r\n                })\r\n            } else {\r\n                sessionStorage.token = \"\"\r\n                sessionStorage.mobile = \"\"\r\n            }\r\n        })\r\n    }\r\n    handleGotoRegister = () => {\r\n        this.props.history.push(\"/register\")\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            codeFlag,\r\n            loginFlag,\r\n            txt\r\n        } = this.state\r\n        return (\r\n            <div className=\"login\">\r\n                <div className=\"loginBox\">\r\n                    {/* 用户名 <Input placeholder=\"请输入用户名\" ref={el => this.username = el} onChange={this.handleCheckUsername} /> */}\r\n                    <span className=\"inputSpan\">\r\n                        用户名:\r\n                            <Input\r\n                            ref={el => this.username = el}\r\n                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.5)' }} />}\r\n                            placeholder=\"Username\"\r\n                            onChange={this.handleCheckUsername}\r\n                        />\r\n                    </span>\r\n\r\n                    {/* 密码 <Input placeholder=\"请输入密码\" ref={el => this.password = el} onChange={this.handleCheckPassword} /> */}\r\n                    <span className=\"inputSpan\">\r\n                        密码:\r\n                            <Input\r\n                            ref={el => this.password = el}\r\n                            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.5)' }} />}\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            onChange={this.handleCheckPassword}\r\n                        />\r\n                    </span>\r\n                    <span className=\"inputSpan\">\r\n\r\n                        手机号\r\n                    {/* <Input\r\n                        type=\"tel\"\r\n                        placeholder=\"请输入手机号\"\r\n                        ref={el => this.mobile = el}\r\n                        onChange={this.handleCheckMobile}\r\n                    /> */}\r\n                        <Input\r\n                            ref={el => this.mobile = el}\r\n                            onChange={this.handleCheckMobile}\r\n                            prefix={<Icon type=\"phone\" style={{ color: 'rgba(0,0,0,.5)' }} />}\r\n                            type=\"phone\"\r\n                            placeholder=\"phone\"\r\n                        />\r\n                    </span>\r\n                    <span className=\"inputSpan\">\r\n                        验证码<Input\r\n                            type=\"text\"\r\n                            placeholder=\"请输入验证码\"\r\n                            ref={el => this.code = el}\r\n                            onChange={this.handleCheckCode}\r\n                        />\r\n                    </span>\r\n                    <span className=\"inputSpan\">\r\n\r\n                        <Button\r\n                            type=\"danger\"\r\n                            className=\"l-btn\"\r\n                            disabled={!codeFlag}\r\n                            onClick={this.handleSendCode}\r\n                        >{txt}</Button>\r\n                    </span>\r\n                    <br />\r\n                    <div className=\"buttonBox\">\r\n\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={this.handleSubmit}\r\n                            disabled={!loginFlag}\r\n                        >注册</Button>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={this.handleGotoRegister}\r\n                        // disabled={!loginFlag}\r\n                        >登录</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeUserRole } from \"../../actions\"\r\nimport { axios } from \"&\";\r\nimport \"./index.scss\"\r\nimport {\r\n    Layout,\r\n    Form,\r\n    Icon,\r\n    Input,\r\n    Button,\r\n    Select\r\n} from \"antd\"\r\nconst { Option } = Select;\r\n\r\nconst userRole = sessionStorage.role\r\n@connect(\r\n    state => (\r\n        {\r\n            oClass: state.getIn([\"data\", \"oClass\"])\r\n        }\r\n    )\r\n)\r\n\r\nclass Register extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            role: 0\r\n        }\r\n    }\r\n    handle = (e) => {\r\n        console.log(e.target.value);\r\n        // console.log(this.username.state.value)\r\n    }\r\n    handleGoToLogin = () => {\r\n        this.props.history.push(\"/login\")\r\n    }\r\n    handleGoToRegister = () => {\r\n        axios.post(\"/react/getLogin\", {\r\n            username: this.username.state.value,\r\n            password: this.password.state.value,\r\n            role: this.state.role\r\n        }).then(res => {\r\n            console.log(res)\r\n            if (res.data.code == 200) {\r\n                sessionStorage.token = res.data.token;\r\n                sessionStorage.mobile = res.data.mobile;\r\n                sessionStorage.role = this.state.role\r\n                sessionStorage.username = this.username.state.value\r\n                this.props.history.push(\"/main/home\")\r\n            }\r\n        })\r\n    }\r\n    handleChange = (value) => {\r\n        // console.log(`selected ${value}`);\r\n        switch (value) {\r\n            case \"管理员\":\r\n                this.setState({\r\n                    role: 2\r\n                })\r\n                return this.state;\r\n                break;\r\n            case \"教师\":\r\n                this.setState({\r\n                    role: 1\r\n                })\r\n                return this.state;\r\n                break;\r\n            case \"学生\":\r\n                this.setState({\r\n                    role: 0\r\n                })\r\n                return this.state;\r\n                break;\r\n\r\n            default:\r\n                return this.state;\r\n                break;\r\n        }\r\n    }\r\n    render() {\r\n        const {\r\n            role,\r\n        } = this.state\r\n        const {\r\n            dispatch\r\n        } = this.props\r\n        return (\r\n            <div className=\"register\">\r\n\r\n                <div className=\"registerBox\">\r\n                    <div className=\"registerBoxContent\">\r\n                        <span className=\"inputSpan\">\r\n                            用户名:\r\n                            {/* <Input\r\n                                ref={el => this.username = el}\r\n                            /> */}\r\n                            <Input\r\n                                ref={el => this.username = el}\r\n                                prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.5)' }} />}\r\n                                placeholder=\"Username\"\r\n                            />,\r\n                        </span>\r\n                        <br />\r\n                        <br />\r\n                        <span className=\"inputSpan\">\r\n                            密码:\r\n                            {/* <Input\r\n                                onChange={this.handle}\r\n                                ref={el => this.password = el}\r\n                            /> */}\r\n                            <Input\r\n                                ref={el => this.password = el}\r\n                                prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.5)' }} />}\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                            />,\r\n                        </span>\r\n                        <br />\r\n                        <br />\r\n                        <span className=\"inputSpan\">\r\n                            <Select ref={el => this.role = el} defaultValue=\"学生\" style={{ width: 120 }} onChange={this.handleChange}>\r\n                                <Option value=\"管理员\">管理员</Option>\r\n                                <Option value=\"教师\">教师</Option>\r\n                                <Option value=\"学生\">学生</Option>\r\n                            </Select>\r\n                        </span>\r\n                        <br />\r\n                        <br />\r\n                        <div className=\"buttonBox\">\r\n                            <Button type=\"primary\" className=\"registerBtn\" onClick={this.handleGoToRegister}>登录</Button>\r\n                            <Button type=\"primary\" className=\"loginBtn\" onClick={this.handleGoToLogin}>注册</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Register;\r\n","import React, { Component } from \"react\";\r\n\r\n\r\nimport {\r\n    // BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect,\r\n    NavLink\r\n} from \"react-router-dom\"\r\n// 两种路由引入\r\n// 一 直接外部引入\r\nimport { Guide } from \"./guide\";\r\n\r\n// import { Main } from \"./main\";\r\nimport Main from \"./main\";\r\nimport { Search } from \"./search\";\r\nimport { Mobile } from \"./mobile\";\r\nimport {Login} from \"./login\";\r\nimport Register from \"./register\"\r\n// 二  路由懒加载   \r\n\r\n\r\nexport class MainBox extends Component {\r\n// class MainBox extends Component {\r\n    render() {\r\n        return (\r\n            // <Router>\r\n            <div>\r\n                <Switch>\r\n                    {/* 一 */}\r\n                    {/* <Route path=\"/guide\" component={Guide} /> */}\r\n\r\n                    <Route path=\"/login\" component={Login} />\r\n                    <Route path=\"/search\" component={Search} />\r\n                    <Route path=\"/main\" component={Main} />\r\n                    <Route path=\"/mobile\" component={Mobile} />\r\n                    <Route path=\"/register\" component={Register}/>\r\n                    <Route render={() => (<Redirect to=\"/login\" />)} />\r\n\r\n\r\n                    {/* 二 路由懒加载 */}\r\n                    {/* <Route path=\"/\" exact render={() => (<Redirect to=\"/guide\" />)} />\r\n                        <Route path=\"/guide\" component={LazyLoad(() => import(\"./guide\"))} />\r\n                        <Route path=\"/home\" component={LazyLoad(() => import(\"./home\"))} />\r\n                        <Route path=\"/mine\" component={LazyLoad(() => import(\"./mine\"))} />\r\n                        <Route path=\"/cart\" component={LazyLoad(() => import(\"./cart\"))} /> */}\r\n                </Switch>\r\n            </div>\r\n            // </Router>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\n// import ReactDOM, { render } from \"react-dom\";\r\nimport store from \"./store\"\r\nimport { Provider } from \"react-redux\";\r\n// import { MainBox } from \"./views\"\r\nimport { MainBox } from \"./views\"\r\nimport {\r\n    HashRouter as Hash,\r\n    BrowserRouter as Router,\r\n    Route\r\n} from \"react-router-dom\"\r\nexport class MainLayout extends Component {\r\n    render() {\r\n        return (\r\n            <Provider\r\n                store={store}>\r\n                <Hash basename=\"\">\r\n                    {/* <h3>react -- react-cli</h3> */}\r\n                    {/* <MainBox /> */}\r\n                    <Route component={MainBox} ></Route>\r\n                </Hash>\r\n            </Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport class MainRouter extends Component {\r\n    render() {\r\n        return (\r\n            <MainLayout></MainLayout>\r\n        )\r\n    }\r\n}\r\n// render(\r\n\r\n//     <MainRouter />,\r\n//     document.getElementById(\"app\")\r\n\r\n// )","import React from 'react';\nimport { MainRouter } from './scripts';\n// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nfunction App(){\n  return (\n    <div>\n      {/* <h3>app--app--app</h3> */}\n      <MainRouter/>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"@/styles/index.scss\"//引入全局样式\n\n\n//ant-Design\nimport { ConfigProvider, DatePicker, message } from 'antd';\n// 由于 antd 组件的默认文案是英文，所以需要修改为中文\nimport zhCN from 'antd/es/locale/zh_CN';\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\nimport 'antd/dist/antd.css';\n\n\n// import \"~/redux\"\n// import \"~/react-redux\"\n// import \"~/immutable\"\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}